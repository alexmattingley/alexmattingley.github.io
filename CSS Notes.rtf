{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red164\green8\blue0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 CSS\
\
A Command in Css is called a rule. So for example:\
\
footer \{\
\
color: green;\
\
\}\
\
that is a rule.\
\
"footer" is a selector.\
\
"color:green;" is a property.\
\
Descendent selector: \
\
nav a \{\
\
$property;\
\
\}\
\
Will select the anchor elements inside of nav element.\
\
A rule of engagement:\
\
Css that comes later overrides CSS that comes earlier. For example, in the title tag, we want main.css comes after normalize.css.\
\
//\
\
Use ID Selectors:\
\
<div id="wrapper">\
\
Select the "wrapper" <div>.\
\
#wrapper \{\
\}\
\
\
margin property:\
\
#wrapper \{\
	margin: $top/$bottom $left/right;\
\}\
\
You can use two selectors in the same line. For example:\
\
h1, h2 \{\
$property\
\}\
\
This is the same as\
\
h1\{\
$property\
\}\
h2 \{\
$property\
\}\
\
\
\pard\pardeftab720

\f1\b \cf0 Pseudo-Class
\b0  - Dynamic selectors that change based on user interaction with the browser, such as hovering over a link, for example. Eg:\
\
nav a, nav a:visited \{\
	color: white;\
\}\
\
Differences between a class and an ID. Class can be used multiple times, and ID is unique and can only be used once.\
\

\fs28 Classes:\
\

\fs24 Select class: \
\
.selected \{\
\
$property\
 \
\}\
\
Select a class thats inside of an element.\
\
nav a.selected \{\
\
$property\
\
\}\
\
More selecting stuff:\
\
Lets say that you want to select a list item inside of an unordered list (class=contact-info) with the class "phone".\
\
This is what it will look like:\
\
\pard\pardeftab720\sl312\slmult1

\fs28 \cf0 .contact-info li.phone \{\
/*do something*/\
\}
\fs24 \
\pard\pardeftab720
\cf0 \
Notice the spacing. li is the child of contact.info so there is a space. Conversely, the class "phone" is part of the li that you are trying to select.\
\

\f0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 Taking a Mobile First Approach:\
\
build the mobile site first and then worry about the more complex shit.\
\
A couple of steps to making a responsive site:\
\
1. Create Fluid images. First you set the image width to 100% and then we set all images to percentages essentially creating a grid. Percentages will allow the image to change sizes with the relative width of the container. Pixels are fixed units and will not adjust based on the size of the browser.\
2. Media Queries.\
\
Media Queries are refered to as a breakpoint. After determining breakpoints we add in mediaqueries.\
\
Media Queries:\
\
@media screen and (condition) \{\
	body \{\
	//do shit\
	\}\
\}\
\
Think of each of the above commands as a condition. If @media is not screen (for example, its print or something else) or condition is not met then the code will not be executed.\
\
\
Fonts:\
\
A couple of steps for custom fonts:\
\
1. Stick href into index document below normalize.css but above main.css. That is because we will be referring to it in our main.css, but we need to make sure that we are able to override normalize.css.\
2.Reference the fonts in CSS.\
\
You can refer to a specific type of a font (think bold, italics thin, etc) either using the keywords or using a number (which needs to reference google fonts). For example:\
\
nav a \{\
	font-weight: 800;\
\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs28 \cf2 ***Widths/styling:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 \
check out how the images are styled here (3/10)\
\
\
img \{\
\
	max-width: 100%;\
\}\
\
This tells the images to fill the width of their parent container. in this case the <li> tag is the parent container. The parent container is going to be the next (up the chain) parent element that is a BLOCK element.\
\
So in this line of code:\
\
<div id="wrapper">\
		<section>\
			<ul id="gallery">\
				<li>\
					<a href="img/numbers-01.jpg">\
						<img src="img/numbers-01.jpg" alt="">\
						<p>Landscapes/Architecture</p>\
					</a>\
				</li>\
The Div Wrapper is the parent of Section is the parent of <ul> is the parent of <li> is the parent of <img>\
\
\
Float element:\
\
The float property allows the text to flow around an image.\
\
A note about floats: If you float and element, it no longer has an assumed width of 100%. You need to make sure that you specify if you want the element to span the width of the page.\
\
Clear Property: \
\
footer \{\
	clear: both;\
\}\
\
So I think this means that this will make it so there is no content on either side of the content in question.\
\
Block level v inline elements:\
\
Block level elements will take up space on the page and push other elements out of the way.\
\
In-line elements: are most just text, they will appear in-line with the surrounding text. images are \
\
In-line Block: will allow block elements to be side by side like in-line elements even if they are not inline elements. This will allow these elements to retain block level features like width and height.\
\
Images are normally displayed inline like text. displaying them block will give us more flexibility in our build. See the class ".profile-photo" \
\
\
Creating High Res images:\
\
 You can put images on the site that are double the size/pxs and then you can resize them in the site.\
\
How to use inspector:\
\
alt+command+i will open up inspector\
\
alt+command+c will allow you to edit in the inspector.\
\
Linking phone numbers and emails:\
\
<ul class="contact info">\
	<li class="phone"><a href="tel:805 455 6260">805 455 6260</a></li>\
	<li class="email"><a href="mailto:hellolulight@gmail.com">hellolulight@gmail.com</a></li>\
</ul>\
\
\
}